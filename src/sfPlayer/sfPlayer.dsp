declare version "2.78.5";
declare compile_options "-single -scal -e sfPlayer_old.dsp -o sfPlayer.dsp";
declare library_path0 "/usr/local/share/faust/stdfaust.lib";
declare library_path1 "/Users/letz/Developpements/smartfaust/src/sfPlayer/sample_player_v0.1a.dsp";
declare library_path2 "/Users/letz/Developpements/smartfaust/src/sfPlayer/sample_v0.1.lib";
declare library_path3 "/Users/letz/Developpements/smartfaust/src/sfPlayer/sampler_crybaby2_v0.1.dsp";
declare library_path4 "/Users/letz/Developpements/smartfaust/src/sfPlayer/sampler_pitch_shifter2_v0.1.dsp";
declare library_path5 "/usr/local/share/faust/filters.lib";
declare library_path6 "/usr/local/share/faust/maths.lib";
declare library_path7 "/usr/local/share/faust/platform.lib";
declare library_path8 "/Users/letz/Developpements/smartfaust/src/sfPlayer/sampler_Zverb4_2_v0.2.dsp";
declare library_path9 "/usr/local/share/faust/signals.lib";
declare library_path10 "/usr/local/share/faust/analyzers.lib";
declare library_path11 "/usr/local/share/faust/basics.lib";
declare library_path12 "/usr/local/share/faust/vaeffects.lib";
declare library_path13 "/usr/local/share/faust/delays.lib";
declare library_path14 "/usr/local/share/faust/reverbs.lib";
declare library_path15 "/usr/local/share/faust/routes.lib";
declare analyzers_lib_name "Faust Analyzer Library";
declare analyzers_lib_version "1.2.0";
declare author "Christophe Lebreton, Stéphane Letz";
declare basics_lib_name "Faust Basic Element Library";
declare basics_lib_version "1.21.0";
declare copyright "SmartFaust - GRAME(c)2013-2025";
declare delays_lib_name "Faust Delay Library";
declare delays_lib_version "1.1.0";
declare filename "sfPlayer_old.dsp";
declare filters_lib_allpass_comb_author "Julius O. Smith III";
declare filters_lib_allpass_comb_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_allpass_comb_license "MIT-style STK-4.3 license";
declare filters_lib_dcblockerat_author "Julius O. Smith III";
declare filters_lib_dcblockerat_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_dcblockerat_license "MIT-style STK-4.3 license";
declare filters_lib_fir_author "Julius O. Smith III";
declare filters_lib_fir_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_fir_license "MIT-style STK-4.3 license";
declare filters_lib_iir_author "Julius O. Smith III";
declare filters_lib_iir_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_iir_license "MIT-style STK-4.3 license";
declare filters_lib_lowpass0_highpass1 "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_lowpass0_highpass1_author "Julius O. Smith III";
declare filters_lib_lowpass_author "Julius O. Smith III";
declare filters_lib_lowpass_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_lowpass_license "MIT-style STK-4.3 license";
declare filters_lib_name "Faust Filters Library";
declare filters_lib_peak_eq_author "Julius O. Smith III";
declare filters_lib_peak_eq_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_peak_eq_license "MIT-style STK-4.3 license";
declare filters_lib_peak_eq_cq_author "Julius O. Smith III";
declare filters_lib_peak_eq_cq_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_peak_eq_cq_license "MIT-style STK-4.3 license";
declare filters_lib_pole_author "Julius O. Smith III";
declare filters_lib_pole_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_pole_license "MIT-style STK-4.3 license";
declare filters_lib_tf1_author "Julius O. Smith III";
declare filters_lib_tf1_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_tf1_license "MIT-style STK-4.3 license";
declare filters_lib_tf1s_author "Julius O. Smith III";
declare filters_lib_tf1s_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_tf1s_license "MIT-style STK-4.3 license";
declare filters_lib_tf2_author "Julius O. Smith III";
declare filters_lib_tf2_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_tf2_license "MIT-style STK-4.3 license";
declare filters_lib_tf2s_author "Julius O. Smith III";
declare filters_lib_tf2s_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_tf2s_license "MIT-style STK-4.3 license";
declare filters_lib_version "1.6.0";
declare filters_lib_zero_author "Julius O. Smith III";
declare filters_lib_zero_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_zero_license "MIT-style STK-4.3 license";
declare license "BSD";
declare maths_lib_author "GRAME";
declare maths_lib_copyright "GRAME";
declare maths_lib_license "LGPL with exception";
declare maths_lib_name "Faust Math Library";
declare maths_lib_version "2.8.1";
declare name "sfPlayer";
declare platform_lib_name "Generic Platform Library";
declare platform_lib_version "1.3.0";
declare reverbs_lib_name "Faust Reverb Library";
declare reverbs_lib_version "1.3.2";
declare routes_lib_hadamard_author "Remy Muller, revised by Romain Michon";
declare routes_lib_name "Faust Signal Routing Library";
declare routes_lib_version "1.2.0";
declare sample_player_v0_1a_dsp_author "Christophe Lebreton";
declare sample_player_v0_1a_dsp_copyright "SmartFaust - GRAME(c)2013-2018";
declare sample_player_v0_1a_dsp_license "BSD";
declare sample_player_v0_1a_dsp_name "Sample_player_v0.1";
declare sample_player_v0_1a_dsp_version "1.01";
declare sample_v0_1_lib_author "Christophe Lebreton, Stéphane Letz";
declare sample_v0_1_lib_copyright "SmartFaust - GRAME(c)2013-2025";
declare sample_v0_1_lib_license "BSD";
declare sample_v0_1_lib_name "sfPlayer";
declare sample_v0_1_lib_version "1.00";
declare sampler_Zverb4_2_v0_2_dsp_author "Christophe Lebreton, Stéphane Letz";
declare sampler_Zverb4_2_v0_2_dsp_copyright "SmartFaust - GRAME(c)2013-2015";
declare sampler_Zverb4_2_v0_2_dsp_license "BSD";
declare sampler_Zverb4_2_v0_2_dsp_name "sfZverb";
declare sampler_Zverb4_2_v0_2_dsp_version "1.4";
declare sampler_crybaby2_v0_1_dsp_author "Christophe Lebreton";
declare sampler_crybaby2_v0_1_dsp_copyright "SmartFaust - GRAME(c)2013-2018";
declare sampler_crybaby2_v0_1_dsp_license "BSD & STK-4.3";
declare sampler_crybaby2_v0_1_dsp_name "sfCrybaby";
declare sampler_crybaby2_v0_1_dsp_version "1.4";
declare sampler_pitch_shifter2_v0_1_dsp_author "Christophe Lebreton";
declare sampler_pitch_shifter2_v0_1_dsp_copyright "SmartFaust - GRAME(c)2013-2025";
declare sampler_pitch_shifter2_v0_1_dsp_license "BSD";
declare sampler_pitch_shifter2_v0_1_dsp_name "sfPitchShifter";
declare sampler_pitch_shifter2_v0_1_dsp_version "1.1";
declare signals_lib_name "Faust Signal Routing Library";
declare signals_lib_version "1.6.0";
declare vaeffects_lib_name "Faust Virtual Analog Filter Effect Library";
declare vaeffects_lib_version "1.2.1";
declare version "1.01";
ID_0 = _, 1;
ID_1 = ID_0 : +;
ID_2 = vslider("acc_x [acc:0 0 -10 0 10][color: 0 255 0 ][hidden:1]", 0.0f, -1e+02f, 1e+02f, 1.0f);
ID_3 = hgroup("v:sfPlayer parameter(s)/accel [hidden:1]", ID_2);
ID_4 = fconstant(int fSamplingFreq, <math.h>);
ID_5 = 1.0f, ID_4;
ID_6 = (ID_5 : max);
ID_7 = 1.92e+05f, ID_6;
ID_8 = (ID_7 : min);
ID_9 = 47.12389f, ID_8;
ID_10 = (ID_9 : /);
ID_11 = 1, ID_10;
ID_12 = (ID_11 : +);
ID_13 = 1.0f, ID_12;
ID_14 = (ID_13 : /);
ID_15 = _, ID_14;
ID_16 = ID_15 : *;
ID_17 = _, mem;
ID_18 = (ID_0 : *);
ID_19 = _, ID_18;
ID_20 = ID_19 : -;
ID_21 = ID_17 : ID_20;
ID_22 = _ <: ID_21;
ID_23 = (ID_11 : -);
ID_24 = ID_23, ID_14;
ID_25 = (ID_24 : *);
ID_26 = _, ID_25;
ID_27 = (ID_26 : *);
ID_28 = + ~ ID_27;
ID_29 = ID_22 : ID_28;
ID_30 = ID_16 : ID_29;
ID_31 = (ID_3 : ID_30);
ID_32 = ID_31, ID_31;
ID_33 = (ID_32 : *);
ID_34 = vslider("acc_y [acc:1 0 -10 0 10][color: 0 255 0 ][hidden:1]", 0.0f, -1e+02f, 1e+02f, 1.0f);
ID_35 = hgroup("v:sfPlayer parameter(s)/accel [hidden:1]", ID_34);
ID_36 = (ID_35 : ID_30);
ID_37 = ID_36, ID_36;
ID_38 = (ID_37 : *);
ID_39 = vslider("acc_z [acc:2 0 -10 0 10][color: 0 255 0 ][hidden:1]", 0.0f, -1e+02f, 1e+02f, 1.0f);
ID_40 = hgroup("v:sfPlayer parameter(s)/accel [hidden:1]", ID_39);
ID_41 = (ID_40 : ID_30);
ID_42 = ID_41, ID_41;
ID_43 = (ID_42 : *);
ID_44 = ID_38, ID_43;
ID_45 = ID_33, ID_44;
ID_46 = _, 9.99f;
ID_47 = ID_46 : -;
ID_48 = _, 0.01f;
ID_49 = ID_48 : /;
ID_50 = 0.0f, _;
ID_51 = ID_50 : max;
ID_52 = 1.0f, _;
ID_53 = ID_52 : min;
ID_54 = ID_51 : ID_53;
ID_55 = ID_49 : ID_54;
ID_56 = ID_47 : ID_55;
ID_57 = sqrt : ID_56;
ID_58 = ID_45 :> ID_57;
ID_59 = (ID_58 : \(x3).(((x3 : mem),0.999f : <=),(x3,0.999f : >) : &));
ID_60 = abs : \(x4).(x4,(1.0f,(((hslider("v:sfPlayer parameter(s)/fade_out[acc:1 0 -10 0 10][color: 255 255 0 ][hidden:1]", 1.3e+02f, 0.0f, 1e+03f, 1.0f),0.001f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *) : abs),1.1920929e-07f : <),(-1.0f,((((hslider("v:sfPlayer parameter(s)/fade_out[acc:1 0 -10 0 10][color: 255 255 0 ][hidden:1]", 1.3e+02f, 0.0f, 1e+03f, 1.0f),0.001f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *) : abs),1.1920929e-07f : <),(hslider("v:sfPlayer parameter(s)/fade_out[acc:1 0 -10 0 10][color: 255 255 0 ][hidden:1]", 1.3e+02f, 0.0f, 1e+03f, 1.0f),0.001f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)),1.0f : select2),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : *) : / : exp),0.0f : select2) : -) : * : (+ : x4,_ : max)~(_,(((hslider("v:sfPlayer parameter(s)/fade_out[acc:1 0 -10 0 10][color: 255 255 0 ][hidden:1]", 1.3e+02f, 0.0f, 1e+03f, 1.0f),0.001f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *) : abs),1.1920929e-07f : <),(-1.0f,((((hslider("v:sfPlayer parameter(s)/fade_out[acc:1 0 -10 0 10][color: 255 255 0 ][hidden:1]", 1.3e+02f, 0.0f, 1e+03f, 1.0f),0.001f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *) : abs),1.1920929e-07f : <),(hslider("v:sfPlayer parameter(s)/fade_out[acc:1 0 -10 0 10][color: 255 255 0 ][hidden:1]", 1.3e+02f, 0.0f, 1e+03f, 1.0f),0.001f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)),1.0f : select2),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : *) : / : exp),0.0f : select2) : *));
ID_61 = ID_60 : \(x5).(\(x6).(((1.0f,(((hslider("v :sfPlayer parameter(s)/fade_in [acc:1 0 -10 0 10][color: 255 255 0 ][hidden:1]", 1.3e+02f, 0.0f, 1e+03f, 1.0f),0.001f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *) : abs),1.1920929e-07f : <),(-1.0f,((((hslider("v :sfPlayer parameter(s)/fade_in [acc:1 0 -10 0 10][color: 255 255 0 ][hidden:1]", 1.3e+02f, 0.0f, 1e+03f, 1.0f),0.001f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *) : abs),1.1920929e-07f : <),(hslider("v :sfPlayer parameter(s)/fade_in [acc:1 0 -10 0 10][color: 255 255 0 ][hidden:1]", 1.3e+02f, 0.0f, 1e+03f, 1.0f),0.001f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)),1.0f : select2),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : *) : / : exp),0.0f : select2) : -),x5 : *),((((hslider("v :sfPlayer parameter(s)/fade_in [acc:1 0 -10 0 10][color: 255 255 0 ][hidden:1]", 1.3e+02f, 0.0f, 1e+03f, 1.0f),0.001f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *) : abs),1.1920929e-07f : <),(-1.0f,((((hslider("v :sfPlayer parameter(s)/fade_in [acc:1 0 -10 0 10][color: 255 255 0 ][hidden:1]", 1.3e+02f, 0.0f, 1e+03f, 1.0f),0.001f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *) : abs),1.1920929e-07f : <),(hslider("v :sfPlayer parameter(s)/fade_in [acc:1 0 -10 0 10][color: 255 255 0 ][hidden:1]", 1.3e+02f, 0.0f, 1e+03f, 1.0f),0.001f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)),1.0f : select2),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : *) : / : exp),0.0f : select2),x6 : *) : +)~_);
ID_62 = ID_58 : ID_61;
ID_63 = (ID_62 : \(x7).(-1,(((x7 : mem),0.0001f : >=),(x7,0.0001f : <) : &) : *));
ID_64 = ID_59, ID_63;
ID_65 = ID_64 : +;
ID_66 = 0, _;
ID_67 = ID_66 : max;
ID_68 = 1, _;
ID_69 = ID_68 : min;
ID_70 = ID_67 : ID_69;
ID_71 = (+ : ID_70);
ID_72 = ID_71 ~ _;
ID_73 = (ID_65 : ID_72);
ID_74 = _, ID_73;
ID_75 = ID_74 : *;
ID_76 = 0, 0;
ID_77 = soundfile("sounds [url:{'sampleA.flac'; 'sampleB.flac'; 'sampleC.flac'; 'sampleD.flac'; 'sampleE.flac'; 'sampleF.flac'; 'sampleG.flac'; 'sampleH.flac'; 'sampleI.flac'; 'sampleJ.flac'}]", 1);
ID_78 = !, !;
ID_79 = _, ID_78;
ID_80 = ID_77 : ID_79;
ID_81 = (ID_76 : ID_80);
ID_82 = 1, ID_81;
ID_83 = (ID_82 : max);
ID_84 = _, ID_83;
ID_85 = ID_84 : fmod;
ID_86 = ID_75 : ID_85;
ID_87 = (ID_1 : ID_86);
ID_88 = + ~ ID_87;
ID_89 = 0 : ID_88;
ID_90 = ID_89 : int;
ID_91 = abs : int;
ID_92 = ID_90 : ID_91;
ID_93 = (ID_92 : \(x8).(0,x8 : soundfile("sounds [url:{'sampleA.flac'; 'sampleB.flac'; 'sampleC.flac'; 'sampleD.flac'; 'sampleE.flac'; 'sampleF.flac'; 'sampleG.flac'; 'sampleH.flac'; 'sampleI.flac'; 'sampleJ.flac'}]", 1) : !,!,_));
ID_94 = 1, 0;
ID_95 = (ID_94 : ID_80);
ID_96 = 1, ID_95;
ID_97 = (ID_96 : max);
ID_98 = _, ID_97;
ID_99 = ID_98 : fmod;
ID_100 = ID_75 : ID_99;
ID_101 = (ID_1 : ID_100);
ID_102 = + ~ ID_101;
ID_103 = 0 : ID_102;
ID_104 = ID_103 : int;
ID_105 = ID_104 : ID_91;
ID_106 = (ID_105 : \(x9).(1,x9 : soundfile("sounds [url:{'sampleA.flac'; 'sampleB.flac'; 'sampleC.flac'; 'sampleD.flac'; 'sampleE.flac'; 'sampleF.flac'; 'sampleG.flac'; 'sampleH.flac'; 'sampleI.flac'; 'sampleJ.flac'}]", 1) : !,!,_));
ID_107 = 2, 0;
ID_108 = (ID_107 : ID_80);
ID_109 = 1, ID_108;
ID_110 = (ID_109 : max);
ID_111 = _, ID_110;
ID_112 = ID_111 : fmod;
ID_113 = ID_75 : ID_112;
ID_114 = (ID_1 : ID_113);
ID_115 = + ~ ID_114;
ID_116 = 0 : ID_115;
ID_117 = ID_116 : int;
ID_118 = ID_117 : ID_91;
ID_119 = (ID_118 : \(x10).(2,x10 : soundfile("sounds [url:{'sampleA.flac'; 'sampleB.flac'; 'sampleC.flac'; 'sampleD.flac'; 'sampleE.flac'; 'sampleF.flac'; 'sampleG.flac'; 'sampleH.flac'; 'sampleI.flac'; 'sampleJ.flac'}]", 1) : !,!,_));
ID_120 = 3, 0;
ID_121 = (ID_120 : ID_80);
ID_122 = 1, ID_121;
ID_123 = (ID_122 : max);
ID_124 = _, ID_123;
ID_125 = ID_124 : fmod;
ID_126 = ID_75 : ID_125;
ID_127 = (ID_1 : ID_126);
ID_128 = + ~ ID_127;
ID_129 = 0 : ID_128;
ID_130 = ID_129 : int;
ID_131 = ID_130 : ID_91;
ID_132 = (ID_131 : \(x11).(3,x11 : soundfile("sounds [url:{'sampleA.flac'; 'sampleB.flac'; 'sampleC.flac'; 'sampleD.flac'; 'sampleE.flac'; 'sampleF.flac'; 'sampleG.flac'; 'sampleH.flac'; 'sampleI.flac'; 'sampleJ.flac'}]", 1) : !,!,_));
ID_133 = 4, 0;
ID_134 = (ID_133 : ID_80);
ID_135 = 1, ID_134;
ID_136 = (ID_135 : max);
ID_137 = _, ID_136;
ID_138 = ID_137 : fmod;
ID_139 = ID_75 : ID_138;
ID_140 = (ID_1 : ID_139);
ID_141 = + ~ ID_140;
ID_142 = 0 : ID_141;
ID_143 = ID_142 : int;
ID_144 = ID_143 : ID_91;
ID_145 = (ID_144 : \(x12).(4,x12 : soundfile("sounds [url:{'sampleA.flac'; 'sampleB.flac'; 'sampleC.flac'; 'sampleD.flac'; 'sampleE.flac'; 'sampleF.flac'; 'sampleG.flac'; 'sampleH.flac'; 'sampleI.flac'; 'sampleJ.flac'}]", 1) : !,!,_));
ID_146 = 5, 0;
ID_147 = (ID_146 : ID_80);
ID_148 = 1, ID_147;
ID_149 = (ID_148 : max);
ID_150 = _, ID_149;
ID_151 = ID_150 : fmod;
ID_152 = ID_75 : ID_151;
ID_153 = (ID_1 : ID_152);
ID_154 = + ~ ID_153;
ID_155 = 0 : ID_154;
ID_156 = ID_155 : int;
ID_157 = ID_156 : ID_91;
ID_158 = (ID_157 : \(x13).(5,x13 : soundfile("sounds [url:{'sampleA.flac'; 'sampleB.flac'; 'sampleC.flac'; 'sampleD.flac'; 'sampleE.flac'; 'sampleF.flac'; 'sampleG.flac'; 'sampleH.flac'; 'sampleI.flac'; 'sampleJ.flac'}]", 1) : !,!,_));
ID_159 = 6, 0;
ID_160 = (ID_159 : ID_80);
ID_161 = 1, ID_160;
ID_162 = (ID_161 : max);
ID_163 = _, ID_162;
ID_164 = ID_163 : fmod;
ID_165 = ID_75 : ID_164;
ID_166 = (ID_1 : ID_165);
ID_167 = + ~ ID_166;
ID_168 = 0 : ID_167;
ID_169 = ID_168 : int;
ID_170 = ID_169 : ID_91;
ID_171 = (ID_170 : \(x14).(6,x14 : soundfile("sounds [url:{'sampleA.flac'; 'sampleB.flac'; 'sampleC.flac'; 'sampleD.flac'; 'sampleE.flac'; 'sampleF.flac'; 'sampleG.flac'; 'sampleH.flac'; 'sampleI.flac'; 'sampleJ.flac'}]", 1) : !,!,_));
ID_172 = 7, 0;
ID_173 = (ID_172 : ID_80);
ID_174 = 1, ID_173;
ID_175 = (ID_174 : max);
ID_176 = _, ID_175;
ID_177 = ID_176 : fmod;
ID_178 = ID_75 : ID_177;
ID_179 = (ID_1 : ID_178);
ID_180 = + ~ ID_179;
ID_181 = 0 : ID_180;
ID_182 = ID_181 : int;
ID_183 = ID_182 : ID_91;
ID_184 = (ID_183 : \(x15).(7,x15 : soundfile("sounds [url:{'sampleA.flac'; 'sampleB.flac'; 'sampleC.flac'; 'sampleD.flac'; 'sampleE.flac'; 'sampleF.flac'; 'sampleG.flac'; 'sampleH.flac'; 'sampleI.flac'; 'sampleJ.flac'}]", 1) : !,!,_));
ID_185 = 8, 0;
ID_186 = (ID_185 : ID_80);
ID_187 = 1, ID_186;
ID_188 = (ID_187 : max);
ID_189 = _, ID_188;
ID_190 = ID_189 : fmod;
ID_191 = ID_75 : ID_190;
ID_192 = (ID_1 : ID_191);
ID_193 = + ~ ID_192;
ID_194 = 0 : ID_193;
ID_195 = ID_194 : int;
ID_196 = ID_195 : ID_91;
ID_197 = (ID_196 : \(x16).(8,x16 : soundfile("sounds [url:{'sampleA.flac'; 'sampleB.flac'; 'sampleC.flac'; 'sampleD.flac'; 'sampleE.flac'; 'sampleF.flac'; 'sampleG.flac'; 'sampleH.flac'; 'sampleI.flac'; 'sampleJ.flac'}]", 1) : !,!,_));
ID_198 = 9, 0;
ID_199 = (ID_198 : ID_80);
ID_200 = 1, ID_199;
ID_201 = (ID_200 : max);
ID_202 = _, ID_201;
ID_203 = ID_202 : fmod;
ID_204 = ID_75 : ID_203;
ID_205 = (ID_1 : ID_204);
ID_206 = + ~ ID_205;
ID_207 = 0 : ID_206;
ID_208 = ID_207 : int;
ID_209 = ID_208 : ID_91;
ID_210 = (ID_209 : \(x17).(9,x17 : soundfile("sounds [url:{'sampleA.flac'; 'sampleB.flac'; 'sampleC.flac'; 'sampleD.flac'; 'sampleE.flac'; 'sampleF.flac'; 'sampleG.flac'; 'sampleH.flac'; 'sampleI.flac'; 'sampleJ.flac'}]", 1) : !,!,_));
ID_211 = ID_197, ID_210;
ID_212 = ID_184, ID_211;
ID_213 = ID_171, ID_212;
ID_214 = ID_158, ID_213;
ID_215 = ID_145, ID_214;
ID_216 = ID_132, ID_215;
ID_217 = ID_119, ID_216;
ID_218 = ID_106, ID_217;
ID_219 = ID_93, ID_218;
ID_220 = nentry("v:sfPlayer parameter(s)/Select Sample[style:menu{'1':1;'2':2;'3':3;'4':4;'5':5;'6':6;'7':7;'8':8;'9':9;'10':10}]", 1.0f, 1.0f, 1e+01f, 1.0f);
ID_221 = ID_220 : int;
ID_222 = ID_0 : -;
ID_223 = ID_221 : ID_222;
ID_224 = (ID_223 : int);
ID_225 = 0, ID_224;
ID_226 = (ID_225 : ==);
ID_227 = _, ID_226;
ID_228 = (ID_227 : *);
ID_229 = 1, ID_224;
ID_230 = (ID_229 : ==);
ID_231 = _, ID_230;
ID_232 = (ID_231 : *);
ID_233 = 2, ID_224;
ID_234 = (ID_233 : ==);
ID_235 = _, ID_234;
ID_236 = (ID_235 : *);
ID_237 = 3, ID_224;
ID_238 = (ID_237 : ==);
ID_239 = _, ID_238;
ID_240 = (ID_239 : *);
ID_241 = 4, ID_224;
ID_242 = (ID_241 : ==);
ID_243 = _, ID_242;
ID_244 = (ID_243 : *);
ID_245 = 5, ID_224;
ID_246 = (ID_245 : ==);
ID_247 = _, ID_246;
ID_248 = (ID_247 : *);
ID_249 = 6, ID_224;
ID_250 = (ID_249 : ==);
ID_251 = _, ID_250;
ID_252 = (ID_251 : *);
ID_253 = 7, ID_224;
ID_254 = (ID_253 : ==);
ID_255 = _, ID_254;
ID_256 = (ID_255 : *);
ID_257 = 8, ID_224;
ID_258 = (ID_257 : ==);
ID_259 = _, ID_258;
ID_260 = (ID_259 : *);
ID_261 = 9, ID_224;
ID_262 = (ID_261 : ==);
ID_263 = _, ID_262;
ID_264 = (ID_263 : *);
ID_265 = ID_260, ID_264;
ID_266 = ID_256, ID_265;
ID_267 = ID_252, ID_266;
ID_268 = ID_248, ID_267;
ID_269 = ID_244, ID_268;
ID_270 = ID_240, ID_269;
ID_271 = ID_236, ID_270;
ID_272 = ID_232, ID_271;
ID_273 = ID_228, ID_272;
ID_274 = ID_273 :> _;
ID_275 = 157.07964f, ID_8;
ID_276 = (ID_275 : /);
ID_277 = 1, ID_276;
ID_278 = (ID_277 : +);
ID_279 = 1.0f, ID_278;
ID_280 = (ID_279 : /);
ID_281 = _, ID_280;
ID_282 = ID_281 : *;
ID_283 = (ID_277 : -);
ID_284 = ID_283, ID_280;
ID_285 = (ID_284 : *);
ID_286 = _, ID_285;
ID_287 = (ID_286 : *);
ID_288 = + ~ ID_287;
ID_289 = ID_22 : ID_288;
ID_290 = ID_282 : ID_289;
ID_291 = _, ID_62;
ID_292 = ID_291 : *;
ID_293 = ID_290 : ID_292;
ID_294 = ID_274 : ID_293;
ID_295 = ID_219 : ID_294;
ID_296 = vgroup("select your sample 1 to 10", ID_295);
ID_297 = _, 0.5f;
ID_298 = ID_297 : *;
ID_299 = hslider("v:sfPlayer parameter(s)/[1] Wah parameter[acc:0 0 -10 0 10][color: 255 0 0 ][hidden:1]", 0.0f, 0.0f, 1.0f, 0.01f);
ID_300 = 3.1415927f, ID_8;
ID_301 = ID_300 : /;
ID_302 = (ID_301 : tan);
ID_303 = 1, ID_302;
ID_304 = (ID_303 : /);
ID_305 = 0, ID_304;
ID_306 = (ID_305 : *);
ID_307 = 1, ID_306;
ID_308 = (ID_307 : +);
ID_309 = 1, ID_304;
ID_310 = (ID_309 : +);
ID_311 = ID_308, ID_310;
ID_312 = (ID_311 : /);
ID_313 = _, ID_312;
ID_314 = (ID_313 : *);
ID_315 = (ID_307 : -);
ID_316 = ID_315, ID_310;
ID_317 = (ID_316 : /);
ID_318 = _, ID_317;
ID_319 = ID_318 : *;
ID_320 = (mem : ID_319);
ID_321 = ID_314, ID_320;
ID_322 = (ID_309 : -);
ID_323 = ID_322, ID_310;
ID_324 = (ID_323 : /);
ID_325 = 0, ID_324;
ID_326 = (ID_325 : -);
ID_327 = _, ID_326;
ID_328 = (ID_327 : *);
ID_329 = + ~ ID_328;
ID_330 = ID_321 :> ID_329;
ID_331 = _ <: ID_330;
ID_332 = (ID_299 : ID_331);
ID_333 = 4.0f, ID_332;
ID_334 = (ID_333 : pow);
ID_335 = 0.1f, ID_334;
ID_336 = ID_335 : *;
ID_337 = (ID_336 : \(x18).(\(x19).((0.001f,x18 : *),(0.999f,x19 : *) : +)~_));
ID_338 = _, ID_337;
ID_339 = ID_338 : *;
ID_340 = 2.3f, ID_332;
ID_341 = (ID_340 : *);
ID_342 = 2.0f, ID_341;
ID_343 = (ID_342 : pow);
ID_344 = 4.5e+02f, ID_343;
ID_345 = (ID_344 : *);
ID_346 = ID_345, ID_8;
ID_347 = (ID_346 : /);
ID_348 = 3.1415927f, ID_347;
ID_349 = (ID_348 : *);
ID_350 = 1.0f, ID_332;
ID_351 = (ID_350 : -);
ID_352 = 2.0f, ID_351;
ID_353 = (ID_352 : *);
ID_354 = ID_353, 1.0f;
ID_355 = (ID_354 : +);
ID_356 = 2.0f, ID_355;
ID_357 = (ID_356 : pow);
ID_358 = ID_349, ID_357;
ID_359 = (ID_358 : /);
ID_360 = 1, ID_359;
ID_361 = (ID_360 : -);
ID_362 = 2.0f, ID_361;
ID_363 = (ID_362 : *);
ID_364 = 6.2831855f, ID_347;
ID_365 = ID_364 : *;
ID_366 = (ID_365 : cos);
ID_367 = ID_363, ID_366;
ID_368 = (ID_367 : *);
ID_369 = 0, ID_368;
ID_370 = ID_369 : -;
ID_371 = (ID_370 : \(x24).(\(x25).((0.001f,x24 : *),(0.999f,x25 : *) : +)~_));
ID_372 = _, ID_371;
ID_373 = (ID_372 : *);
ID_374 = ID_0 : @;
ID_375 = ID_361, ID_361;
ID_376 = ID_375 : *;
ID_377 = (ID_376 : \(x26).(\(x27).((0.001f,x26 : *),(0.999f,x27 : *) : +)~_));
ID_378 = _, ID_377;
ID_379 = ID_378 : *;
ID_380 = (ID_374 : ID_379);
ID_381 = ID_373, ID_380;
ID_382 = ID_381 :> _;
ID_383 = (_ <: ID_382);
ID_384 = \(x28).(\(x29).(x29,x28 : -)) ~ ID_383;
ID_385 = _, -1;
ID_386 = ID_385 : *;
ID_387 = (ID_374 : ID_386);
ID_388 = _, 2;
ID_389 = ID_388 : @;
ID_390 = _, 0;
ID_391 = ID_390 : *;
ID_392 = (ID_389 : ID_391);
ID_393 = ID_387, ID_392;
ID_394 = ID_18, ID_393;
ID_395 = ID_394 :> _;
ID_396 = _ <: ID_395;
ID_397 = ID_384 : ID_396;
ID_398 = (ID_339 : ID_397);
ID_399 = _, ID_398;
ID_400 = ID_399 : \(x30).((_,(0.5f,((hslider("v:sfPlayer parameter(s)/ DryWet [acc:1 0 -10 0 10][color: 255 255 0 ] [hidden:1]", 0.0f, 0.0f, 1e+02f, 1.0f) : _,0.02f : * : _,1 : - : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)),1.0f : +) : *) : *),((1.0f,(0.5f,((hslider("v:sfPlayer parameter(s)/ DryWet [acc:1 0 -10 0 10][color: 255 255 0 ] [hidden:1]", 0.0f, 0.0f, 1e+02f, 1.0f) : _,0.02f : * : _,1 : - : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)),1.0f : +) : *) : -),x30 : *) : +);
ID_401 = _ <: ID_400;
ID_402 = _, \(x31).(((((x31,(65537,(0,(1,(2,((hslider("v:sfPlayer parameter(s)/shift [units (cents)] [acc:0 0 -10 0 10][color: 255 0 0 ][hidden:1] ", 0.0f, -2e+02f, 2e+02f, 0.1f),0.01f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)),12 : /) : pow) : - : (+ : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : + : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : fmod)~_ : int) : max) : min) : @),(1,((1,(2,((hslider("v:sfPlayer parameter(s)/shift [units (cents)] [acc:0 0 -10 0 10][color: 255 0 0 ][hidden:1] ", 0.0f, -2e+02f, 2e+02f, 0.1f),0.01f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)),12 : /) : pow) : - : (+ : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : + : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : fmod)~_),(1,(2,((hslider("v:sfPlayer parameter(s)/shift [units (cents)] [acc:0 0 -10 0 10][color: 255 0 0 ][hidden:1] ", 0.0f, -2e+02f, 2e+02f, 0.1f),0.01f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)),12 : /) : pow) : - : (+ : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : + : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : fmod)~_ : floor) : -) : -) : *),((x31,(65537,(0,((1,(2,((hslider("v:sfPlayer parameter(s)/shift [units (cents)] [acc:0 0 -10 0 10][color: 255 0 0 ][hidden:1] ", 0.0f, -2e+02f, 2e+02f, 0.1f),0.01f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)),12 : /) : pow) : - : (+ : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : + : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : fmod)~_ : int),1 : +) : max) : min) : @),((1,(2,((hslider("v:sfPlayer parameter(s)/shift [units (cents)] [acc:0 0 -10 0 10][color: 255 0 0 ][hidden:1] ", 0.0f, -2e+02f, 2e+02f, 0.1f),0.01f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)),12 : /) : pow) : - : (+ : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : + : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : fmod)~_),(1,(2,((hslider("v:sfPlayer parameter(s)/shift [units (cents)] [acc:0 0 -10 0 10][color: 255 0 0 ][hidden:1] ", 0.0f, -2e+02f, 2e+02f, 0.1f),0.01f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)),12 : /) : pow) : - : (+ : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : + : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : fmod)~_ : floor) : -) : *) : +),(((1,(2,((hslider("v:sfPlayer parameter(s)/shift [units (cents)] [acc:0 0 -10 0 10][color: 255 0 0 ][hidden:1] ", 0.0f, -2e+02f, 2e+02f, 0.1f),0.01f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)),12 : /) : pow) : - : (+ : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : + : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : fmod)~_),(((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *),0.5f : *) : /),1 : min) : *),((((x31,(65537,(0,((1,(2,((hslider("v:sfPlayer parameter(s)/shift [units (cents)] [acc:0 0 -10 0 10][color: 255 0 0 ][hidden:1] ", 0.0f, -2e+02f, 2e+02f, 0.1f),0.01f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)),12 : /) : pow) : - : (+ : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : + : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : fmod)~_),((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : + : int) : max) : min) : @),(1,(((1,(2,((hslider("v:sfPlayer parameter(s)/shift [units (cents)] [acc:0 0 -10 0 10][color: 255 0 0 ][hidden:1] ", 0.0f, -2e+02f, 2e+02f, 0.1f),0.01f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)),12 : /) : pow) : - : (+ : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : + : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : fmod)~_),((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : +),((1,(2,((hslider("v:sfPlayer parameter(s)/shift [units (cents)] [acc:0 0 -10 0 10][color: 255 0 0 ][hidden:1] ", 0.0f, -2e+02f, 2e+02f, 0.1f),0.01f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)),12 : /) : pow) : - : (+ : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : + : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : fmod)~_),((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : + : floor) : -) : -) : *),((x31,(65537,(0,(((1,(2,((hslider("v:sfPlayer parameter(s)/shift [units (cents)] [acc:0 0 -10 0 10][color: 255 0 0 ][hidden:1] ", 0.0f, -2e+02f, 2e+02f, 0.1f),0.01f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)),12 : /) : pow) : - : (+ : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : + : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : fmod)~_),((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : + : int),1 : +) : max) : min) : @),(((1,(2,((hslider("v:sfPlayer parameter(s)/shift [units (cents)] [acc:0 0 -10 0 10][color: 255 0 0 ][hidden:1] ", 0.0f, -2e+02f, 2e+02f, 0.1f),0.01f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)),12 : /) : pow) : - : (+ : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : + : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : fmod)~_),((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : +),((1,(2,((hslider("v:sfPlayer parameter(s)/shift [units (cents)] [acc:0 0 -10 0 10][color: 255 0 0 ][hidden:1] ", 0.0f, -2e+02f, 2e+02f, 0.1f),0.01f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)),12 : /) : pow) : - : (+ : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : + : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : fmod)~_),((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : + : floor) : -) : *) : +),(1,(((1,(2,((hslider("v:sfPlayer parameter(s)/shift [units (cents)] [acc:0 0 -10 0 10][color: 255 0 0 ][hidden:1] ", 0.0f, -2e+02f, 2e+02f, 0.1f),0.01f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)),12 : /) : pow) : - : (+ : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : + : _,((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *) : fmod)~_),(((75,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),0.001f : *),0.5f : *) : /),1 : min) : -) : *) : +);
ID_403 = ID_402 : \(x32).(\(x33).(((1,(hslider("v:sfPlayer parameter(s)/dry_wet  [acc:2 0 -10 0 10][color: 0 255 0 ][hidden:1] ", 1e+02f, 0.0f, 1e+02f, 0.01f) : _,0.01f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)) : -),x32 : *),((hslider("v:sfPlayer parameter(s)/dry_wet  [acc:2 0 -10 0 10][color: 0 255 0 ][hidden:1] ", 1e+02f, 0.0f, 1e+02f, 0.01f) : _,0.01f : * : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)),x33 : *) : +));
ID_404 = _ <: ID_403;
ID_405 = hslider("v:sfPlayer parameter(s)/volume [acc:1 0 -10 10 0 1][color:0 255 0][hidden:1]", 1.0f, -0.3f, 1.0f, 0.0001f);
ID_406 = ID_69 : ID_331;
ID_407 = ID_67 : ID_406;
ID_408 = (ID_405 : ID_407);
ID_409 = _, ID_408;
ID_410 = ID_409 : *;
ID_411 = \(x34).(\(x35).(x34,x35 : (\(x36).(x36,(8192,(0,(((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),50 : *),0.001f : *) : max) : min) : @),0.3f : *),(\(x36).(x36,(8192,(0,(((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),50 : *),0.001f : *) : max) : min) : @),0.3f : *) : _,_<:_,_,(_,-1 : *),(_,-1 : *) : (_,_,_,_,_,_,_,_:>((+<:\(x37).(x37,(1024,(0,((0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.020346f : *) : + : floor),1 : -) : max) : min) : @),(_,0.6f : *))~(_,-0.6f : *) : mem,_ : +),((+<:\(x38).(x38,(2048,(0,((0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.024421f : *) : + : floor),1 : -) : max) : min) : @),(_,-0.6f : *))~(_,0.6f : *) : mem,_ : +),((+<:\(x39).(x39,(2048,(0,((0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.031604f : *) : + : floor),1 : -) : max) : min) : @),(_,0.6f : *))~(_,-0.6f : *) : mem,_ : +),((+<:\(x40).(x40,(2048,(0,((0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.027333f : *) : + : floor),1 : -) : max) : min) : @),(_,-0.6f : *))~(_,0.6f : *) : mem,_ : +) : _,_,_,_<:route(4,4,1,1,2,3,3,2,4,4),route(4,4,1,1,2,3,3,2,4,4) : +,+,-,- : (_,_<:+,-),(_,_<:+,-))~(((((((-3.0f,(1e+01f : log) : *),(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),\(x41).(x41,(((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[2] Low RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : /),1 : -),(x41 : _<:(_,((1,(0,(1,(1570.7964f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(1570.7964f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(1570.7964f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(1570.7964f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(1570.7964f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(1570.7964f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)) : *) : +) : * : \(x42).(\(x43).(((1.0f,(((1.0f,((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *),(83817.695f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : / : cos) : *) : -),(1.0f,(((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *) : -) : /),(0,((((1.0f,((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *),(83817.695f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : / : cos) : *) : -),(1.0f,(((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *) : -) : /),((1.0f,((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *),(83817.695f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : / : cos) : *) : -),(1.0f,(((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *) : -) : /) : *),1.0f : -) : max : sqrt) : -) : -),x42 : *),((((1.0f,((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *),(83817.695f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : / : cos) : *) : -),(1.0f,(((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *) : -) : /),(0,((((1.0f,((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *),(83817.695f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : / : cos) : *) : -),(1.0f,(((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *) : -) : /),((1.0f,((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *),(83817.695f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : / : cos) : *) : -),(1.0f,(((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *) : -) : /) : *),1.0f : -) : max : sqrt) : -),x43 : *) : +)~_)),(4 : float : sqrt) : /),1e-20f : +),((((((-3.0f,(1e+01f : log) : *),(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),\(x44).(x44,(((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[2] Low RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : /),1 : -),(x44 : _<:(_,((1,(0,(1,(1570.7964f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(1570.7964f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(1570.7964f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(1570.7964f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(1570.7964f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(1570.7964f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)) : *) : +) : * : \(x45).(\(x46).(((1.0f,(((1.0f,((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *),(83817.695f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : / : cos) : *) : -),(1.0f,(((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *) : -) : /),(0,((((1.0f,((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *),(83817.695f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : / : cos) : *) : -),(1.0f,(((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *) : -) : /),((1.0f,((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *),(83817.695f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : / : cos) : *) : -),(1.0f,(((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *) : -) : /) : *),1.0f : -) : max : sqrt) : -) : -),x45 : *),((((1.0f,((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *),(83817.695f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : / : cos) : *) : -),(1.0f,(((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *) : -) : /),(0,((((1.0f,((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *),(83817.695f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : / : cos) : *) : -),(1.0f,(((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *) : -) : /),((1.0f,((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *),(83817.695f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : / : cos) : *) : -),(1.0f,(((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *) : -) : /) : *),1.0f : -) : max : sqrt) : -),x46 : *) : +)~_)),(4 : float : sqrt) : /),1e-20f : +),((((((-3.0f,(1e+01f : log) : *),(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),\(x47).(x47,(((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[2] Low RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : /),1 : -),(x47 : _<:(_,((1,(0,(1,(1570.7964f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(1570.7964f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(1570.7964f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(1570.7964f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(1570.7964f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(1570.7964f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)) : *) : +) : * : \(x48).(\(x49).(((1.0f,(((1.0f,((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *),(83817.695f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : / : cos) : *) : -),(1.0f,(((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *) : -) : /),(0,((((1.0f,((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *),(83817.695f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : / : cos) : *) : -),(1.0f,(((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *) : -) : /),((1.0f,((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *),(83817.695f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : / : cos) : *) : -),(1.0f,(((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *) : -) : /) : *),1.0f : -) : max : sqrt) : -) : -),x48 : *),((((1.0f,((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *),(83817.695f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : / : cos) : *) : -),(1.0f,(((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *) : -) : /),(0,((((1.0f,((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *),(83817.695f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : / : cos) : *) : -),(1.0f,(((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *) : -) : /),((1.0f,((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *),(83817.695f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : / : cos) : *) : -),(1.0f,(((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *) : -) : /) : *),1.0f : -) : max : sqrt) : -),x49 : *) : +)~_)),(4 : float : sqrt) : /),1e-20f : +),((((((-3.0f,(1e+01f : log) : *),(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),\(x50).(x50,(((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[2] Low RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : /),1 : -),(x50 : _<:(_,((1,(0,(1,(1570.7964f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(1570.7964f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(1570.7964f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(1570.7964f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(1570.7964f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(1570.7964f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *)) : *) : +) : * : \(x51).(\(x52).(((1.0f,(((1.0f,((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *),(83817.695f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : / : cos) : *) : -),(1.0f,(((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *) : -) : /),(0,((((1.0f,((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *),(83817.695f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : / : cos) : *) : -),(1.0f,(((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *) : -) : /),((1.0f,((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *),(83817.695f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : / : cos) : *) : -),(1.0f,(((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *) : -) : /) : *),1.0f : -) : max : sqrt) : -) : -),x51 : *),((((1.0f,((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *),(83817.695f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : / : cos) : *) : -),(1.0f,(((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *) : -) : /),(0,((((1.0f,((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *),(83817.695f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : / : cos) : *) : -),(1.0f,(((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *) : -) : /),((1.0f,((((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *),(83817.695f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : / : cos) : *) : -),(1.0f,(((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp),((-6.9077554f,(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor) : *),(hslider("v:sfPlayer parameter(s)/[3] Mid RT60 [acc:1 1 -10 0 10][color:255 255 0][hidden:1]", 5.0f, 1.0f, 7.0f, 0.1f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : / : exp) : *) : -) : /) : *),1.0f : -) : max : sqrt) : -),x52 : *) : +)~_)),(4 : float : sqrt) : /),1e-20f : +) : \(x53).(x53,(8192,(0,((0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.153129f : *) : + : floor),(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.020346f : *) : + : floor) : -) : max) : min) : @),\(x54).(x54,(16384,(0,((0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.210389f : *) : + : floor),(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.024421f : *) : + : floor) : -) : max) : min) : @),\(x55).(x55,(8192,(0,((0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.127837f : *) : + : floor),(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.031604f : *) : + : floor) : -) : max) : min) : @),\(x56).(x56,(16384,(0,((0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.256891f : *) : + : floor),(0.5f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0.027333f : *) : + : floor) : -) : max) : min) : @)) : !,(_,_<:+,-),! : (_,0.37f : *),(_,0.37f : *) : (\(x57).(\(x58).(x58,x57 : -))~(_<:(_,((2,(1,((1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -) : *),((1,((0,(1.0f,(3.1415927f,((105,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(1979.2034f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : *),(3.1415927f,((105,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(1979.2034f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : select2),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +) : /) : *),(_,1 : @ : _,(((1,((0,(1.0f,(3.1415927f,((105,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(1979.2034f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : *),(3.1415927f,((105,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(1979.2034f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : select2),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),((1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,((0,(1.0f,(3.1415927f,((105,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(1979.2034f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : *),(3.1415927f,((105,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(1979.2034f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : select2),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +) : /) : *):>_) : _<:(_,1 : *),(_,1 : @ : _,((2,(1,(1,((1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : *) : -) : *),((1,((0,(1.0f,(3.1415927f,((105,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(1979.2034f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : *),(3.1415927f,((105,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(1979.2034f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : select2),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +) : /) : *),(_,2 : @ : _,(((1,((0,(3.1415927f,((105,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(1979.2034f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *),(1.0f,(3.1415927f,((105,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(1979.2034f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : *) : select2),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,((1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : *) : +),((1,((0,(1.0f,(3.1415927f,((105,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(1979.2034f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : *),(3.1415927f,((105,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(1979.2034f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : select2),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +) : /) : *):>_),(\(x57).(\(x58).(x58,x57 : -))~(_<:(_,((2,(1,((1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -) : *),((1,((0,(1.0f,(3.1415927f,((105,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(1979.2034f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : *),(3.1415927f,((105,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(1979.2034f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : select2),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +) : /) : *),(_,1 : @ : _,(((1,((0,(1.0f,(3.1415927f,((105,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(1979.2034f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : *),(3.1415927f,((105,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(1979.2034f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : select2),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),((1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,((0,(1.0f,(3.1415927f,((105,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(1979.2034f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : *),(3.1415927f,((105,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(1979.2034f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : select2),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +) : /) : *):>_) : _<:(_,1 : *),(_,1 : @ : _,((2,(1,(1,((1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : *) : -) : *),((1,((0,(1.0f,(3.1415927f,((105,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(1979.2034f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : *),(3.1415927f,((105,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(1979.2034f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : select2),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +) : /) : *),(_,2 : @ : _,(((1,((0,(3.1415927f,((105,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(1979.2034f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *),(1.0f,(3.1415927f,((105,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(1979.2034f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : *) : select2),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,((1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : *) : +),((1,((0,(1.0f,(3.1415927f,((105,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(1979.2034f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : *),(3.1415927f,((105,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(1979.2034f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : select2),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(989.6017f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +) : /) : *):>_) : (\(x57).(\(x58).(x58,x57 : -))~(_<:(_,((2,(1,((1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -) : *),((1,((0,(1.0f,(3.1415927f,((1000,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(18849.557f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : *),(3.1415927f,((1000,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(18849.557f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : select2),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +) : /) : *),(_,1 : @ : _,(((1,((0,(1.0f,(3.1415927f,((1000,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(18849.557f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : *),(3.1415927f,((1000,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(18849.557f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : select2),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),((1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,((0,(1.0f,(3.1415927f,((1000,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(18849.557f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : *),(3.1415927f,((1000,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(18849.557f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : select2),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +) : /) : *):>_) : _<:(_,1 : *),(_,1 : @ : _,((2,(1,(1,((1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : *) : -) : *),((1,((0,(1.0f,(3.1415927f,((1000,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(18849.557f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : *),(3.1415927f,((1000,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(18849.557f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : select2),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +) : /) : *),(_,2 : @ : _,(((1,((0,(3.1415927f,((1000,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(18849.557f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *),(1.0f,(3.1415927f,((1000,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(18849.557f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : *) : select2),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,((1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : *) : +),((1,((0,(1.0f,(3.1415927f,((1000,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(18849.557f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : *),(3.1415927f,((1000,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(18849.557f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : select2),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +) : /) : *):>_),(\(x57).(\(x58).(x58,x57 : -))~(_<:(_,((2,(1,((1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -) : *),((1,((0,(1.0f,(3.1415927f,((1000,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(18849.557f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : *),(3.1415927f,((1000,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(18849.557f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : select2),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +) : /) : *),(_,1 : @ : _,(((1,((0,(1.0f,(3.1415927f,((1000,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(18849.557f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : *),(3.1415927f,((1000,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(18849.557f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : select2),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),((1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,((0,(1.0f,(3.1415927f,((1000,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(18849.557f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : *),(3.1415927f,((1000,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(18849.557f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : select2),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +) : /) : *):>_) : _<:(_,1 : *),(_,1 : @ : _,((2,(1,(1,((1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : *) : -) : *),((1,((0,(1.0f,(3.1415927f,((1000,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(18849.557f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : *),(3.1415927f,((1000,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(18849.557f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : select2),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +) : /) : *),(_,2 : @ : _,(((1,((0,(3.1415927f,((1000,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(18849.557f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *),(1.0f,(3.1415927f,((1000,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(18849.557f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : *) : select2),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,((1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : *) : +),((1,((0,(1.0f,(3.1415927f,((1000,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(18849.557f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : *),(3.1415927f,((1000,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : *),(18849.557f,(1.0f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : float) : * : sin) : /) : *) : select2),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(9424.778f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +) : /) : *):>_) : ((_,(0.5f,(((hslider("v:sfPlayer parameter(s)/[1] Dry/Wet Mix  [tooltip: -1 = dry, 1 = wet] [acc:1 1 -10 5 10][color:255 255 0][hidden:1]", 5.0f, 0.0f, 17.0f, 0.1f),0.02f : *),1 : - : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *) : -1,_ : max : 1,_ : min),1.0f : +) : *) : *),((1.0f,(0.5f,(((hslider("v:sfPlayer parameter(s)/[1] Dry/Wet Mix  [tooltip: -1 = dry, 1 = wet] [acc:1 1 -10 5 10][color:255 255 0][hidden:1]", 5.0f, 0.0f, 17.0f, 0.1f),0.02f : *),1 : - : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *) : -1,_ : max : 1,_ : min),1.0f : +) : *) : -),x34 : *) : +),((_,(0.5f,(((hslider("v:sfPlayer parameter(s)/[1] Dry/Wet Mix  [tooltip: -1 = dry, 1 = wet] [acc:1 1 -10 5 10][color:255 255 0][hidden:1]", 5.0f, 0.0f, 17.0f, 0.1f),0.02f : *),1 : - : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *) : -1,_ : max : 1,_ : min),1.0f : +) : *) : *),((1.0f,(0.5f,(((hslider("v:sfPlayer parameter(s)/[1] Dry/Wet Mix  [tooltip: -1 = dry, 1 = wet] [acc:1 1 -10 5 10][color:255 255 0][hidden:1]", 5.0f, 0.0f, 17.0f, 0.1f),0.02f : *),1 : - : _<:(_,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *),(mem : _,((1,(0,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : *):>+~(_,(0,((1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : -),(1,(1,(3.1415927f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : +) : /) : -) : *) : -1,_ : max : 1,_ : min),1.0f : +) : *) : -),x35 : *) : +))) :> _;
ID_412 = _ <: ID_411;
ID_413 = -0.99f, _;
ID_414 = ID_413 : max;
ID_415 = 0.99f, _;
ID_416 = ID_415 : min;
ID_417 = checkbox("v:sfPlayer/ON/OFF");
ID_418 = (ID_417 : \(x1).(\(x2).((0.002f,x1 : *),(0.998f,x2 : *) : +)~_));
ID_419 = _, ID_418;
ID_420 = ID_419 : *;
ID_421 = ID_416 : ID_420;
ID_422 = ID_414 : ID_421;
ID_423 = ID_412 : ID_422;
ID_424 = ID_410 : ID_423;
ID_425 = ID_404 : ID_424;
ID_426 = ID_401 : ID_425;
ID_427 = ID_298 : ID_426;
ID_428 = ID_296 : ID_427;
process = ID_428;
